// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// VCS coverage exclude_file
module sbox_256x8(	// @[src/main/algorithm/key_extension.scala:15:17]
  input  [7:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [7:0] R1_addr,
  input        R1_en,
               R1_clk,
  output [7:0] R1_data,
  input  [7:0] R2_addr,
  input        R2_en,
               R2_clk,
  output [7:0] R2_data,
  input  [7:0] R3_addr,
  input        R3_en,
               R3_clk,
  output [7:0] R3_data
);

  reg [7:0] Memory[0:255];	// @[src/main/algorithm/key_extension.scala:15:17]
  `ifdef ENABLE_INITIAL_MEM_	// @[src/main/algorithm/key_extension.scala:15:17]
    reg [31:0] _RANDOM_MEM;	// @[src/main/algorithm/key_extension.scala:15:17]
    initial begin	// @[src/main/algorithm/key_extension.scala:15:17]
      `INIT_RANDOM_PROLOG_	// @[src/main/algorithm/key_extension.scala:15:17]
      `ifdef RANDOMIZE_MEM_INIT	// @[src/main/algorithm/key_extension.scala:15:17]
        for (logic [8:0] i = 9'h0; i < 9'h100; i += 9'h1) begin
          _RANDOM_MEM = `RANDOM;	// @[src/main/algorithm/key_extension.scala:15:17]
          Memory[i[7:0]] = _RANDOM_MEM[7:0];	// @[src/main/algorithm/key_extension.scala:15:17]
        end	// @[src/main/algorithm/key_extension.scala:15:17]
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// @[src/main/algorithm/key_extension.scala:15:17]
  assign R1_data = R1_en ? Memory[R1_addr] : 8'bx;	// @[src/main/algorithm/key_extension.scala:15:17]
  assign R2_data = R2_en ? Memory[R2_addr] : 8'bx;	// @[src/main/algorithm/key_extension.scala:15:17]
  assign R3_data = R3_en ? Memory[R3_addr] : 8'bx;	// @[src/main/algorithm/key_extension.scala:15:17]
endmodule

// VCS coverage exclude_file
module rcon_11x8(	// @[src/main/algorithm/key_extension.scala:18:17]
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data
);

  reg [7:0] Memory[0:10];	// @[src/main/algorithm/key_extension.scala:18:17]
  `ifdef ENABLE_INITIAL_MEM_	// @[src/main/algorithm/key_extension.scala:18:17]
    reg [31:0] _RANDOM_MEM;	// @[src/main/algorithm/key_extension.scala:18:17]
    initial begin	// @[src/main/algorithm/key_extension.scala:18:17]
      `INIT_RANDOM_PROLOG_	// @[src/main/algorithm/key_extension.scala:18:17]
      `ifdef RANDOMIZE_MEM_INIT	// @[src/main/algorithm/key_extension.scala:18:17]
        for (logic [3:0] i = 4'h0; i < 4'hB; i += 4'h1) begin
          _RANDOM_MEM = `RANDOM;	// @[src/main/algorithm/key_extension.scala:18:17]
          Memory[i] = _RANDOM_MEM[7:0];	// @[src/main/algorithm/key_extension.scala:18:17]
        end	// @[src/main/algorithm/key_extension.scala:18:17]
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// @[src/main/algorithm/key_extension.scala:18:17]
endmodule

module GFunc(	// @[src/main/algorithm/key_extension.scala:9:7]
  input         clock,	// @[src/main/algorithm/key_extension.scala:9:7]
  input  [31:0] io_data_in,	// @[src/main/algorithm/key_extension.scala:10:14]
  input  [3:0]  io_nCol,	// @[src/main/algorithm/key_extension.scala:10:14]
  output [31:0] io_data_out	// @[src/main/algorithm/key_extension.scala:10:14]
);

  wire [7:0] _rcon_ext_R0_data;	// @[src/main/algorithm/key_extension.scala:18:17]
  wire [7:0] _sbox_ext_R0_data;	// @[src/main/algorithm/key_extension.scala:15:17]
  wire [7:0] _sbox_ext_R1_data;	// @[src/main/algorithm/key_extension.scala:15:17]
  wire [7:0] _sbox_ext_R2_data;	// @[src/main/algorithm/key_extension.scala:15:17]
  wire [7:0] _sbox_ext_R3_data;	// @[src/main/algorithm/key_extension.scala:15:17]
  sbox_256x8 sbox_ext (	// @[src/main/algorithm/key_extension.scala:15:17]
    .R0_addr (io_data_in[7:0]),	// @[src/main/algorithm/key_extension.scala:24:{47,67}]
    .R0_en   (1'h1),	// @[src/main/algorithm/key_extension.scala:9:7]
    .R0_clk  (clock),
    .R0_data (_sbox_ext_R0_data),
    .R1_addr (io_data_in[15:8]),	// @[src/main/algorithm/key_extension.scala:23:{48,69}]
    .R1_en   (1'h1),	// @[src/main/algorithm/key_extension.scala:9:7]
    .R1_clk  (clock),
    .R1_data (_sbox_ext_R1_data),
    .R2_addr (io_data_in[23:16]),	// @[src/main/algorithm/key_extension.scala:22:{49,71}]
    .R2_en   (1'h1),	// @[src/main/algorithm/key_extension.scala:9:7]
    .R2_clk  (clock),
    .R2_data (_sbox_ext_R2_data),
    .R3_addr (io_data_in[31:24]),	// @[src/main/algorithm/key_extension.scala:21:{49,71}]
    .R3_en   (1'h1),	// @[src/main/algorithm/key_extension.scala:9:7]
    .R3_clk  (clock),
    .R3_data (_sbox_ext_R3_data)
  );
  rcon_11x8 rcon_ext (	// @[src/main/algorithm/key_extension.scala:18:17]
    .R0_addr (io_nCol),
    .R0_en   (1'h1),	// @[src/main/algorithm/key_extension.scala:9:7]
    .R0_clk  (clock),
    .R0_data (_rcon_ext_R0_data)
  );
  assign io_data_out =
    {_sbox_ext_R2_data ^ _rcon_ext_R0_data,
     _sbox_ext_R1_data,
     _sbox_ext_R0_data,
     _sbox_ext_R3_data};	// @[src/main/algorithm/key_extension.scala:9:7, :15:17, :18:17, :26:23, :27:21]
endmodule

module KeyExpansion(	// @[src/main/algorithm/key_extension.scala:31:7]
  input        clock,	// @[src/main/algorithm/key_extension.scala:31:7]
  input  [7:0] io_key_in_0_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_0_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_0_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_0_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_1_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_1_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_1_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_1_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_2_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_2_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_2_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_2_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_3_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_3_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_3_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_in_3_3,	// @[src/main/algorithm/key_extension.scala:32:14]
  input  [3:0] io_nCol,	// @[src/main/algorithm/key_extension.scala:32:14]
  output [7:0] io_key_out_0_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_0_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_0_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_0_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_1_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_1_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_1_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_1_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_2_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_2_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_2_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_2_3,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_3_0,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_3_1,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_3_2,	// @[src/main/algorithm/key_extension.scala:32:14]
               io_key_out_3_3	// @[src/main/algorithm/key_extension.scala:32:14]
);

  wire [31:0] _gfunc_io_data_out;	// @[src/main/algorithm/key_extension.scala:53:21]
  wire [31:0] w3 = {io_key_in_0_3, io_key_in_1_3, io_key_in_2_3, io_key_in_3_3};	// @[src/main/algorithm/key_extension.scala:51:12]
  wire [31:0] w0out =
    {io_key_in_0_0, io_key_in_1_0, io_key_in_2_0, io_key_in_3_0} ^ _gfunc_io_data_out;	// @[src/main/algorithm/key_extension.scala:48:12, :53:21, :57:15]
  wire [31:0] w1out =
    w0out ^ {io_key_in_0_1, io_key_in_1_1, io_key_in_2_1, io_key_in_3_1};	// @[src/main/algorithm/key_extension.scala:49:12, :57:15, :58:18]
  wire [31:0] w2out =
    w1out ^ {io_key_in_0_2, io_key_in_1_2, io_key_in_2_2, io_key_in_3_2};	// @[src/main/algorithm/key_extension.scala:50:12, :58:18, :59:18]
  wire [31:0] w3out = w2out ^ w3;	// @[src/main/algorithm/key_extension.scala:51:12, :59:18, :60:18]
  GFunc gfunc (	// @[src/main/algorithm/key_extension.scala:53:21]
    .clock       (clock),
    .io_data_in  (w3),	// @[src/main/algorithm/key_extension.scala:51:12]
    .io_nCol     (io_nCol),
    .io_data_out (_gfunc_io_data_out)
  );
  assign io_key_out_0_0 = w0out[31:24];	// @[src/main/algorithm/key_extension.scala:31:7, :57:15, :65:28]
  assign io_key_out_0_1 = w1out[31:24];	// @[src/main/algorithm/key_extension.scala:31:7, :58:18, :70:28]
  assign io_key_out_0_2 = w2out[31:24];	// @[src/main/algorithm/key_extension.scala:31:7, :59:18, :75:28]
  assign io_key_out_0_3 = w3out[31:24];	// @[src/main/algorithm/key_extension.scala:31:7, :60:18, :80:28]
  assign io_key_out_1_0 = w0out[23:16];	// @[src/main/algorithm/key_extension.scala:31:7, :57:15, :64:28]
  assign io_key_out_1_1 = w1out[23:16];	// @[src/main/algorithm/key_extension.scala:31:7, :58:18, :69:28]
  assign io_key_out_1_2 = w2out[23:16];	// @[src/main/algorithm/key_extension.scala:31:7, :59:18, :74:28]
  assign io_key_out_1_3 = w3out[23:16];	// @[src/main/algorithm/key_extension.scala:31:7, :60:18, :79:28]
  assign io_key_out_2_0 = w0out[15:8];	// @[src/main/algorithm/key_extension.scala:31:7, :57:15, :63:28]
  assign io_key_out_2_1 = w1out[15:8];	// @[src/main/algorithm/key_extension.scala:31:7, :58:18, :68:28]
  assign io_key_out_2_2 = w2out[15:8];	// @[src/main/algorithm/key_extension.scala:31:7, :59:18, :73:28]
  assign io_key_out_2_3 = w3out[15:8];	// @[src/main/algorithm/key_extension.scala:31:7, :60:18, :78:28]
  assign io_key_out_3_0 = w0out[7:0];	// @[src/main/algorithm/key_extension.scala:31:7, :57:15, :62:28]
  assign io_key_out_3_1 = w1out[7:0];	// @[src/main/algorithm/key_extension.scala:31:7, :58:18, :67:28]
  assign io_key_out_3_2 = w2out[7:0];	// @[src/main/algorithm/key_extension.scala:31:7, :59:18, :72:28]
  assign io_key_out_3_3 = w3out[7:0];	// @[src/main/algorithm/key_extension.scala:31:7, :60:18, :77:28]
endmodule

module top(	// @[src/main/top.scala:6:7]
  input        clock,	// @[src/main/top.scala:6:7]
               reset,	// @[src/main/top.scala:6:7]
  output [7:0] io_data_out_0_0,	// @[src/main/top.scala:7:14]
               io_data_out_0_1,	// @[src/main/top.scala:7:14]
               io_data_out_0_2,	// @[src/main/top.scala:7:14]
               io_data_out_0_3,	// @[src/main/top.scala:7:14]
               io_data_out_1_0,	// @[src/main/top.scala:7:14]
               io_data_out_1_1,	// @[src/main/top.scala:7:14]
               io_data_out_1_2,	// @[src/main/top.scala:7:14]
               io_data_out_1_3,	// @[src/main/top.scala:7:14]
               io_data_out_2_0,	// @[src/main/top.scala:7:14]
               io_data_out_2_1,	// @[src/main/top.scala:7:14]
               io_data_out_2_2,	// @[src/main/top.scala:7:14]
               io_data_out_2_3,	// @[src/main/top.scala:7:14]
               io_data_out_3_0,	// @[src/main/top.scala:7:14]
               io_data_out_3_1,	// @[src/main/top.scala:7:14]
               io_data_out_3_2,	// @[src/main/top.scala:7:14]
               io_data_out_3_3,	// @[src/main/top.scala:7:14]
  input  [7:0] io_key_in_0_0,	// @[src/main/top.scala:7:14]
               io_key_in_0_1,	// @[src/main/top.scala:7:14]
               io_key_in_0_2,	// @[src/main/top.scala:7:14]
               io_key_in_0_3,	// @[src/main/top.scala:7:14]
               io_key_in_1_0,	// @[src/main/top.scala:7:14]
               io_key_in_1_1,	// @[src/main/top.scala:7:14]
               io_key_in_1_2,	// @[src/main/top.scala:7:14]
               io_key_in_1_3,	// @[src/main/top.scala:7:14]
               io_key_in_2_0,	// @[src/main/top.scala:7:14]
               io_key_in_2_1,	// @[src/main/top.scala:7:14]
               io_key_in_2_2,	// @[src/main/top.scala:7:14]
               io_key_in_2_3,	// @[src/main/top.scala:7:14]
               io_key_in_3_0,	// @[src/main/top.scala:7:14]
               io_key_in_3_1,	// @[src/main/top.scala:7:14]
               io_key_in_3_2,	// @[src/main/top.scala:7:14]
               io_key_in_3_3	// @[src/main/top.scala:7:14]
);

  wire [7:0] _dut_io_key_out_0_0;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_0_1;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_0_2;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_0_3;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_1_0;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_1_1;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_1_2;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_1_3;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_2_0;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_2_1;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_2_2;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_2_3;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_3_0;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_3_1;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_3_2;	// @[src/main/top.scala:18:19]
  wire [7:0] _dut_io_key_out_3_3;	// @[src/main/top.scala:18:19]
  reg  [3:0] nCol;	// @[src/main/top.scala:14:24]
  reg  [7:0] key_mid_0_0;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_0_1;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_0_2;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_0_3;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_1_0;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_1_1;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_1_2;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_1_3;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_2_0;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_2_1;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_2_2;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_2_3;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_3_0;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_3_1;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_3_2;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_mid_3_3;	// @[src/main/top.scala:15:24]
  reg  [7:0] key_0_0;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_0_1;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_0_2;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_0_3;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_1_0;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_1_1;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_1_2;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_1_3;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_2_0;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_2_1;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_2_2;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_2_3;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_3_0;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_3_1;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_3_2;	// @[src/main/top.scala:16:24]
  reg  [7:0] key_3_3;	// @[src/main/top.scala:16:24]
  wire       _GEN = nCol == 4'h1 | nCol == 4'h0;	// @[src/main/top.scala:6:7, :14:24, :24:{29,37,45}]
  always @(posedge clock) begin	// @[src/main/top.scala:6:7]
    if (reset) begin	// @[src/main/top.scala:6:7]
      nCol <= 4'h0;	// @[src/main/top.scala:6:7, :14:24]
      key_mid_0_0 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_0_1 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_0_2 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_0_3 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_1_0 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_1_1 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_1_2 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_1_3 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_2_0 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_2_1 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_2_2 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_2_3 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_3_0 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_3_1 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_3_2 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_mid_3_3 <= 8'h0;	// @[src/main/top.scala:15:{24,52}]
      key_0_0 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_0_1 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_0_2 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_0_3 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_1_0 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_1_1 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_1_2 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_1_3 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_2_0 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_2_1 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_2_2 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_2_3 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_3_0 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_3_1 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_3_2 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
      key_3_3 <= 8'h0;	// @[src/main/top.scala:15:52, :16:24]
    end
    else begin	// @[src/main/top.scala:6:7]
      nCol <= nCol + 4'h1;	// @[src/main/top.scala:6:7, :14:24, :21:19]
      key_mid_0_0 <= _dut_io_key_out_0_0;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_0_1 <= _dut_io_key_out_0_1;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_0_2 <= _dut_io_key_out_0_2;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_0_3 <= _dut_io_key_out_0_3;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_1_0 <= _dut_io_key_out_1_0;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_1_1 <= _dut_io_key_out_1_1;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_1_2 <= _dut_io_key_out_1_2;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_1_3 <= _dut_io_key_out_1_3;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_2_0 <= _dut_io_key_out_2_0;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_2_1 <= _dut_io_key_out_2_1;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_2_2 <= _dut_io_key_out_2_2;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_2_3 <= _dut_io_key_out_2_3;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_3_0 <= _dut_io_key_out_3_0;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_3_1 <= _dut_io_key_out_3_1;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_3_2 <= _dut_io_key_out_3_2;	// @[src/main/top.scala:15:24, :18:19]
      key_mid_3_3 <= _dut_io_key_out_3_3;	// @[src/main/top.scala:15:24, :18:19]
      key_0_0 <= io_key_in_0_0;	// @[src/main/top.scala:16:24]
      key_0_1 <= io_key_in_0_1;	// @[src/main/top.scala:16:24]
      key_0_2 <= io_key_in_0_2;	// @[src/main/top.scala:16:24]
      key_0_3 <= io_key_in_0_3;	// @[src/main/top.scala:16:24]
      key_1_0 <= io_key_in_1_0;	// @[src/main/top.scala:16:24]
      key_1_1 <= io_key_in_1_1;	// @[src/main/top.scala:16:24]
      key_1_2 <= io_key_in_1_2;	// @[src/main/top.scala:16:24]
      key_1_3 <= io_key_in_1_3;	// @[src/main/top.scala:16:24]
      key_2_0 <= io_key_in_2_0;	// @[src/main/top.scala:16:24]
      key_2_1 <= io_key_in_2_1;	// @[src/main/top.scala:16:24]
      key_2_2 <= io_key_in_2_2;	// @[src/main/top.scala:16:24]
      key_2_3 <= io_key_in_2_3;	// @[src/main/top.scala:16:24]
      key_3_0 <= io_key_in_3_0;	// @[src/main/top.scala:16:24]
      key_3_1 <= io_key_in_3_1;	// @[src/main/top.scala:16:24]
      key_3_2 <= io_key_in_3_2;	// @[src/main/top.scala:16:24]
      key_3_3 <= io_key_in_3_3;	// @[src/main/top.scala:16:24]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/top.scala:6:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/top.scala:6:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/top.scala:6:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:8];	// @[src/main/top.scala:6:7]
    initial begin	// @[src/main/top.scala:6:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/top.scala:6:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/top.scala:6:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/top.scala:6:7]
        for (logic [3:0] i = 4'h0; i < 4'h9; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// @[src/main/top.scala:6:7]
        end	// @[src/main/top.scala:6:7]
        nCol = _RANDOM[4'h0][3:0];	// @[src/main/top.scala:6:7, :14:24]
        key_mid_0_0 = _RANDOM[4'h0][11:4];	// @[src/main/top.scala:6:7, :14:24, :15:24]
        key_mid_0_1 = _RANDOM[4'h0][19:12];	// @[src/main/top.scala:6:7, :14:24, :15:24]
        key_mid_0_2 = _RANDOM[4'h0][27:20];	// @[src/main/top.scala:6:7, :14:24, :15:24]
        key_mid_0_3 = {_RANDOM[4'h0][31:28], _RANDOM[4'h1][3:0]};	// @[src/main/top.scala:6:7, :14:24, :15:24]
        key_mid_1_0 = _RANDOM[4'h1][11:4];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_1_1 = _RANDOM[4'h1][19:12];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_1_2 = _RANDOM[4'h1][27:20];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_1_3 = {_RANDOM[4'h1][31:28], _RANDOM[4'h2][3:0]};	// @[src/main/top.scala:6:7, :15:24]
        key_mid_2_0 = _RANDOM[4'h2][11:4];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_2_1 = _RANDOM[4'h2][19:12];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_2_2 = _RANDOM[4'h2][27:20];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_2_3 = {_RANDOM[4'h2][31:28], _RANDOM[4'h3][3:0]};	// @[src/main/top.scala:6:7, :15:24]
        key_mid_3_0 = _RANDOM[4'h3][11:4];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_3_1 = _RANDOM[4'h3][19:12];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_3_2 = _RANDOM[4'h3][27:20];	// @[src/main/top.scala:6:7, :15:24]
        key_mid_3_3 = {_RANDOM[4'h3][31:28], _RANDOM[4'h4][3:0]};	// @[src/main/top.scala:6:7, :15:24]
        key_0_0 = _RANDOM[4'h4][11:4];	// @[src/main/top.scala:6:7, :15:24, :16:24]
        key_0_1 = _RANDOM[4'h4][19:12];	// @[src/main/top.scala:6:7, :15:24, :16:24]
        key_0_2 = _RANDOM[4'h4][27:20];	// @[src/main/top.scala:6:7, :15:24, :16:24]
        key_0_3 = {_RANDOM[4'h4][31:28], _RANDOM[4'h5][3:0]};	// @[src/main/top.scala:6:7, :15:24, :16:24]
        key_1_0 = _RANDOM[4'h5][11:4];	// @[src/main/top.scala:6:7, :16:24]
        key_1_1 = _RANDOM[4'h5][19:12];	// @[src/main/top.scala:6:7, :16:24]
        key_1_2 = _RANDOM[4'h5][27:20];	// @[src/main/top.scala:6:7, :16:24]
        key_1_3 = {_RANDOM[4'h5][31:28], _RANDOM[4'h6][3:0]};	// @[src/main/top.scala:6:7, :16:24]
        key_2_0 = _RANDOM[4'h6][11:4];	// @[src/main/top.scala:6:7, :16:24]
        key_2_1 = _RANDOM[4'h6][19:12];	// @[src/main/top.scala:6:7, :16:24]
        key_2_2 = _RANDOM[4'h6][27:20];	// @[src/main/top.scala:6:7, :16:24]
        key_2_3 = {_RANDOM[4'h6][31:28], _RANDOM[4'h7][3:0]};	// @[src/main/top.scala:6:7, :16:24]
        key_3_0 = _RANDOM[4'h7][11:4];	// @[src/main/top.scala:6:7, :16:24]
        key_3_1 = _RANDOM[4'h7][19:12];	// @[src/main/top.scala:6:7, :16:24]
        key_3_2 = _RANDOM[4'h7][27:20];	// @[src/main/top.scala:6:7, :16:24]
        key_3_3 = {_RANDOM[4'h7][31:28], _RANDOM[4'h8][3:0]};	// @[src/main/top.scala:6:7, :16:24]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/top.scala:6:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/top.scala:6:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  KeyExpansion dut (	// @[src/main/top.scala:18:19]
    .clock          (clock),
    .io_key_in_0_0  (_GEN ? key_0_0 : key_mid_0_0),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_0_1  (_GEN ? key_0_1 : key_mid_0_1),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_0_2  (_GEN ? key_0_2 : key_mid_0_2),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_0_3  (_GEN ? key_0_3 : key_mid_0_3),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_1_0  (_GEN ? key_1_0 : key_mid_1_0),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_1_1  (_GEN ? key_1_1 : key_mid_1_1),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_1_2  (_GEN ? key_1_2 : key_mid_1_2),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_1_3  (_GEN ? key_1_3 : key_mid_1_3),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_2_0  (_GEN ? key_2_0 : key_mid_2_0),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_2_1  (_GEN ? key_2_1 : key_mid_2_1),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_2_2  (_GEN ? key_2_2 : key_mid_2_2),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_2_3  (_GEN ? key_2_3 : key_mid_2_3),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_3_0  (_GEN ? key_3_0 : key_mid_3_0),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_3_1  (_GEN ? key_3_1 : key_mid_3_1),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_3_2  (_GEN ? key_3_2 : key_mid_3_2),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_key_in_3_3  (_GEN ? key_3_3 : key_mid_3_3),	// @[src/main/top.scala:15:24, :16:24, :24:{23,37}]
    .io_nCol        (nCol),	// @[src/main/top.scala:14:24]
    .io_key_out_0_0 (_dut_io_key_out_0_0),
    .io_key_out_0_1 (_dut_io_key_out_0_1),
    .io_key_out_0_2 (_dut_io_key_out_0_2),
    .io_key_out_0_3 (_dut_io_key_out_0_3),
    .io_key_out_1_0 (_dut_io_key_out_1_0),
    .io_key_out_1_1 (_dut_io_key_out_1_1),
    .io_key_out_1_2 (_dut_io_key_out_1_2),
    .io_key_out_1_3 (_dut_io_key_out_1_3),
    .io_key_out_2_0 (_dut_io_key_out_2_0),
    .io_key_out_2_1 (_dut_io_key_out_2_1),
    .io_key_out_2_2 (_dut_io_key_out_2_2),
    .io_key_out_2_3 (_dut_io_key_out_2_3),
    .io_key_out_3_0 (_dut_io_key_out_3_0),
    .io_key_out_3_1 (_dut_io_key_out_3_1),
    .io_key_out_3_2 (_dut_io_key_out_3_2),
    .io_key_out_3_3 (_dut_io_key_out_3_3)
  );
  assign io_data_out_0_0 = _dut_io_key_out_0_0;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_0_1 = _dut_io_key_out_0_1;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_0_2 = _dut_io_key_out_0_2;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_0_3 = _dut_io_key_out_0_3;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_1_0 = _dut_io_key_out_1_0;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_1_1 = _dut_io_key_out_1_1;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_1_2 = _dut_io_key_out_1_2;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_1_3 = _dut_io_key_out_1_3;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_2_0 = _dut_io_key_out_2_0;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_2_1 = _dut_io_key_out_2_1;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_2_2 = _dut_io_key_out_2_2;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_2_3 = _dut_io_key_out_2_3;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_3_0 = _dut_io_key_out_3_0;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_3_1 = _dut_io_key_out_3_1;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_3_2 = _dut_io_key_out_3_2;	// @[src/main/top.scala:6:7, :18:19]
  assign io_data_out_3_3 = _dut_io_key_out_3_3;	// @[src/main/top.scala:6:7, :18:19]
endmodule


// ----- 8< ----- FILE "sbox_256x8_init.sv" ----- 8< -----

// Generated by CIRCT firtool-1.62.0
module sbox_256x8_init();	// @[src/main/algorithm/key_extension.scala:15:17]
  initial	// @[src/main/algorithm/key_extension.scala:15:17]
    $readmemh("../memory/sbox.hex", sbox_256x8.Memory);	// @[src/main/algorithm/key_extension.scala:15:17]
endmodule

bind sbox_256x8 sbox_256x8_init sbox_256x8_init ();

// ----- 8< ----- FILE "rcon_11x8_init.sv" ----- 8< -----

// Generated by CIRCT firtool-1.62.0
module rcon_11x8_init();	// @[src/main/algorithm/key_extension.scala:18:17]
  initial	// @[src/main/algorithm/key_extension.scala:18:17]
    $readmemh("../memory/rcon.hex", rcon_11x8.Memory);	// @[src/main/algorithm/key_extension.scala:18:17]
endmodule

bind rcon_11x8 rcon_11x8_init rcon_11x8_init ();
